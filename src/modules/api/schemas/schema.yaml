openapi: 3.0.0
paths:
  /auth/login:
    post:
      operationId: AuthController_signIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TelegramInitDataDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenDto"
        "400":
          description: ""
      tags:
        - Authorization
  /assets:
    get:
      operationId: AssetsController_getPlayerAssets
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerAssetsDto"
      tags:
        - Assets
      security:
        - bearer: []
  /assets/charge-points:
    post:
      operationId: AssetsController_chargePoints
      parameters: []
      responses:
        "201":
          description: ""
        "400":
          description: Not enough energy
      tags:
        - Assets
      security:
        - bearer: []
  /assets/time-to-full-energy:
    get:
      operationId: AssetsController_getTimeToFullEnergy
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemainingTimeDto"
      tags:
        - Assets
      security:
        - bearer: []
  /referral:
    get:
      operationId: ReferralController_getReferrals
      parameters:
        - name: page
          required: true
          in: query
          description: page pagination starts from 0
          schema:
            type: number
        - name: perPage
          required: true
          in: query
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ReferralDto"
      tags:
        - Referral
      security:
        - bearer: []
  /referral/link:
    get:
      operationId: ReferralController_getReferralLink
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferralLinkDto"
      tags:
        - Referral
      security:
        - bearer: []
  /event/tap:
    patch:
      operationId: EventController_tap
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TapEventDto"
      responses:
        "200":
          description: ""
      tags:
        - Event
      security:
        - bearer: []
  /settings:
    get:
      operationId: SettingsController_findOne
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsDto"
      tags:
        - Settings
      security:
        - bearer: []
  /tasks:
    get:
      operationId: TasksController_findAll
      parameters:
        - name: page
          required: true
          in: query
          description: page pagination starts from 0
          schema:
            type: number
        - name: perPage
          required: true
          in: query
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/TaskDto"
      tags:
        - Tasks
  /tasks/start/{id}:
    post:
      operationId: TasksController_start
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "201":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
      tags:
        - Tasks
  /tasks/claim/{id}:
    patch:
      operationId: TasksController_claim
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
      tags:
        - Tasks
info:
  title: Ambeaver API
  description: ""
  version: 0.0.1
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    TelegramInitDataDto:
      type: object
      properties:
        initData:
          type: string
      required:
        - initData
    AccessTokenDto:
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token
    PlayerAssetsDto:
      type: object
      properties:
        points:
          type: number
        energy:
          type: number
        ambers:
          type: number
        totalTapped:
          type: number
      required:
        - points
        - energy
        - ambers
        - totalTapped
    RemainingTimeDto:
      type: object
      properties:
        remainingTime:
          type: number
      required:
        - remainingTime
    PaginationMeta:
      type: object
      properties:
        page:
          type: number
        perPage:
          type: number
        totalPages:
          type: number
        totalItems:
          type: number
      required:
        - page
        - perPage
        - totalPages
        - totalItems
    PaginatedResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/PaginationMeta"
      required:
        - meta
    ReferralDto:
      type: object
      properties:
        username:
          type: string
        ambers:
          type: number
      required:
        - username
        - ambers
    ReferralLinkDto:
      type: object
      properties:
        link:
          type: string
      required:
        - link
    TapEventDto:
      type: object
      properties:
        amount:
          type: number
          minimum: 1
      required:
        - amount
    SettingsDto:
      type: object
      properties:
        playerLimits:
          type: object
          properties:
            points:
              required: true
              type: number
            energy:
              required: true
              type: number
            referrals:
              required: true
              type: number
        fullChargePointsCostInEnergy:
          type: number
        referralRewards:
          type: object
          properties:
            premium:
              required: true
              type: number
            normal:
              required: true
              type: number
      required:
        - playerLimits
        - fullChargePointsCostInEnergy
        - referralRewards
    SocialSubscriptionMetaTaskDto:
      type: object
      properties:
        url:
          type: string
      required:
        - url
    TaskDto:
      type: object
      properties:
        meta:
          oneOf:
            - $ref: "#/components/schemas/SocialSubscriptionMetaTaskDto"
              description: Metadata for SOCIAL_SUBSCRIPTION task type
          description: Each task type has its own metadata
          allOf:
            - $ref: "#/components/schemas/SocialSubscriptionMetaTaskDto"
        id:
          type: string
        title:
          type: string
        type:
          type: string
          enum:
            - INVITE_FRIENDS
            - SOCIAL_SUBSCRIPTION
        rewardInAmbers:
          type: number
        status:
          type: string
          enum:
            - FINISHED
            - READY_FOR_CLAIM
            - NOT_STARTED
      required:
        - id
        - title
        - type
        - rewardInAmbers
        - status
