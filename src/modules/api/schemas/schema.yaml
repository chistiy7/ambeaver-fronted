openapi: 3.0.0
paths:
  /auth/login:
    post:
      operationId: AuthController_signIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TelegramInitDataDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenDto"
        "400":
          description: ""
      tags:
        - Authorization
  /asset:
    get:
      operationId: AssetController_getPlayerAssets
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerAssetsDto"
      tags:
        - Asset
      security:
        - bearer: []
  /asset/charge-points:
    post:
      operationId: AssetController_chargePoints
      parameters: []
      responses:
        "201":
          description: ""
        "400":
          description: Not enough energy
      tags:
        - Asset
      security:
        - bearer: []
  /asset/time-to-full-energy:
    get:
      operationId: AssetController_getTimeToFullEnergy
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemainingTimeDto"
      tags:
        - Asset
      security:
        - bearer: []
  /referral:
    get:
      operationId: ReferralController_getReferrals
      parameters:
        - name: page
          required: true
          in: query
          description: page pagination starts from 0
          schema:
            type: number
        - name: perPage
          required: true
          in: query
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/ReferralDto"
      tags:
        - Referral
      security:
        - bearer: []
  /referral/link:
    get:
      operationId: ReferralController_getReferralLink
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferralLinkDto"
      tags:
        - Referral
      security:
        - bearer: []
  /event/tap:
    patch:
      operationId: EventController_tap
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TapEventDto"
      responses:
        "200":
          description: ""
      tags:
        - Event
      security:
        - bearer: []
  /settings:
    get:
      operationId: SettingsController_findOne
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsDto"
      tags:
        - Settings
      security:
        - bearer: []
  /tasks:
    post:
      operationId: TasksController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskDto"
    get:
      operationId: TasksController_findAll
      parameters:
        - name: page
          required: true
          in: query
          description: page pagination starts from 0
          schema:
            type: number
        - name: perPage
          required: true
          in: query
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Task"
  /tasks/{id}:
    get:
      operationId: TasksController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
    patch:
      operationId: TasksController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
    delete:
      operationId: TasksController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
info:
  title: Ambeaver API
  description: ""
  version: 0.0.1
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    TelegramInitDataDto:
      type: object
      properties:
        initData:
          type: string
      required:
        - initData
    AccessTokenDto:
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token
    PlayerAssetsDto:
      type: object
      properties:
        points:
          type: number
        energy:
          type: number
        ambers:
          type: number
        totalTapped:
          type: number
      required:
        - points
        - energy
        - ambers
        - totalTapped
    RemainingTimeDto:
      type: object
      properties:
        remainingTime:
          type: number
      required:
        - remainingTime
    PaginationMeta:
      type: object
      properties:
        page:
          type: number
        perPage:
          type: number
        totalPages:
          type: number
        totalItems:
          type: number
      required:
        - page
        - perPage
        - totalPages
        - totalItems
    PaginatedResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/PaginationMeta"
      required:
        - meta
    ReferralDto:
      type: object
      properties:
        username:
          type: string
        ambers:
          type: number
      required:
        - ambers
    ReferralLinkDto:
      type: object
      properties:
        link:
          type: string
      required:
        - link
    TapEventDto:
      type: object
      properties:
        amount:
          type: number
          minimum: 1
      required:
        - amount
    SettingsDto:
      type: object
      properties:
        limits:
          type: object
          properties:
            points:
              required: true
              type: number
            energy:
              required: true
              type: number
            referral:
              required: true
              type: number
        chargePrice:
          type: number
        referralReward:
          type: object
          properties:
            normal:
              type: object
              properties:
                amount:
                  required: true
                  type: number
            premium:
              type: object
              properties:
                amount:
                  required: true
                  type: number
      required:
        - limits
        - chargePrice
        - referralReward
    CreateTaskDto:
      type: object
      properties:
        title:
          type: string
        rewardInAmbers:
          type: number
      required:
        - title
        - rewardInAmbers
    Task:
      type: object
      properties:
        title:
          type: string
        rewardInAmbers:
          type: number
        type:
          type: string
          enum:
            - welcome
            - invite
            - subscribe
        meta:
          type: string
        id:
          type: number
        createdAt:
          type: object
          default: 2024-08-08T21:06:36.674Z
        updatedAt:
          type: object
          default: 2024-08-08T21:06:36.674Z
      required:
        - title
        - rewardInAmbers
        - type
        - meta
        - id
        - createdAt
        - updatedAt
    UpdateTaskDto:
      type: object
      properties:
        title:
          type: string
        rewardInAmbers:
          type: number
